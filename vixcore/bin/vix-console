#!/usr/bin/env python3
import os,sys,logging
BASE= os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if BASE not in sys.path:
  sys.path.append(BASE)
CERT = BASE+'/conf/cert.pem'
from lib.config import *
from lib.webvnc_console import *
WS_HOST = config.get("vixcore.console.listen")
WS_PORT = config.get("vixcore.console.port")
from optparse import OptionParser
parser = OptionParser()

parser.add_option("-v",
                  "--verbose",
                  dest="verbose",
                  action="store_true",
                  help="Verbose mode",
                  default=False)

parser.add_option("-D",
                  "--debug",
                  dest="debug",
                  action="store_true",
                  help="Debug mode",
                  default=False)

parser.add_option("-H",
                  "--host",
                  dest="host",
                  action="store",
                  help="Listen host",
                  default=WS_HOST)

parser.add_option("-p",
                  "--port",
                  dest="port",
                  action="store",
                  help="Listen port",
                  default=WS_PORT or 6080)

parser.add_option("-c",
                  "--cert",
                  dest="cert",
                  action="store",
                  help="Certificate file path",
                  default= CERT)
  
parser.add_option("--ssl-only",
                  dest="ssl_only",
                  action="store_true",
                  help="Deny non-ssl connections",
                  default=False)

parser.add_option("-l",
                  "--listen",
                  dest="listen",
                  action="store_true",
                  help="Run processes,    Usage : start -l",
                  default=False)

parser.add_option("-d",
                  "--daemon",
                  dest="daemonize",
                  action="store_true",
                  help="Run daemonize processes,     Usage : Start -d",
                  default=False)

(options,args) = parser.parse_args()

if __name__ == '__main__':
  argv = sys.argv
  if len(argv) ==3 and argv[1] =='start' and argv[2] == "-l":
    run_proxy(options.host,options.port,options.verbose,options.cert,options.ssl_only,options.daemonize,options.debug)
  elif len(argv) ==3 and argv[1] =='start' and argv[2] == "-d":
    run_proxy(options.host,options.port,options.verbose,options.cert,options.ssl_only,options.daemonize,options.debug)
  else:
    parser.error("Too few arguments use -h or --help")
